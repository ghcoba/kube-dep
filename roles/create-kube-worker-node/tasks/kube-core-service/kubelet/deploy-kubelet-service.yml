---

# file: deploy-kubelet-service.yml
#

# func:
#   deploy kube-proxy service
#     . prepare kubelet environment (user, dir, cert,bin, config)
#     . create config file
#     . create service systemd file
#     . (external routine to set firewall)
#     . start service

# 1.
#   prepare enviroment
#

- name: create kubelet enviroment
  import_tasks: create-kubelet-user-and-env.yml

# 2.
#   create config (json config file) for kubelet service
- name: create config file for kubelet service systemd unit file
  template:
     src: kubelet.config.j2
     dest: "{{ kube_newtype_config_path }}/kubelet.config"

# 3.
#   create kubelet service systemd file
#   (take care of difference of kubelet service on master node and worker node - set kubelet to set taint for master node when resitering node)
- name: create kubelet service systemd unit file
  template:
     src: kubelet.service.j2
     dest: /etc/systemd/system/kubelet.service
  when: not ( inventory_hostname in groups['kube-masters'] ) 
- name: create kubelet service systemd unit file
  template:
     src: master-node.kubelet.service.j2
     dest: /etc/systemd/system/kubelet.service
  when: ( inventory_hostname in groups['kube-masters'] )

# 4.
#   enable kubelet service

# enable and start kube-proxy service
- name: enable and start kubelet service
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted
    enabled: yes

- name:
  debug:
    msg: "done deploy kubelet on {{ inventory_hostname }}."
