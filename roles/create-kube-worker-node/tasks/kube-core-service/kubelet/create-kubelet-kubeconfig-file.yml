---

# file: create-kubelet-kubeconfig-file.yml
#

# generate kubelet config file (set cluster, credential, context, and default context)
# copy to ansible backup
# copy to kub home dire

# generate kubelet config file for every master node
- name: generate kublet config - set cluster
  shell: "{{ bin_path }}/kubectl config set-cluster kubernetes --certificate-authority={{ kube_ca_file }} --embed-certs=true --server={{ kube_load_balancer_apiserver_url }} --kubeconfig={{ kubelet_config_file }}"
  args:
    chdir: "{{ kube_config_path }}/"


- name: generate kubelet config - set credential
  shell: "{{ bin_path }}/kubectl config set-credentials system:node:{{ inventory_hostname }} --client-certificate={{ kubelet_cert_file }} --embed-certs=true --client-key={{ kubelet_key_file }} --kubeconfig={{ kubelet_config_file }}"
  args:
    chdir: "{{ kube_config_path }}/"

- name: generate kubelet config - set context
  shell: "{{ bin_path }}/kubectl config set-context system:node:{{ inventory_hostname }}@kubernetes --cluster=kubernetes --user=system:node:{{ inventory_hostname }} --kubeconfig={{ kubelet_config_file }}"
  args:
    chdir: "{{ kube_config_path }}/"

- name: generate kubelet config - set default context
  shell: "{{ bin_path }}/kubectl config use-context system:node:{{ inventory_hostname }}@kubernetes --kubeconfig={{ kubelet_config_file }}"
  args:
    chdir: "{{ kube_config_path }}/"
