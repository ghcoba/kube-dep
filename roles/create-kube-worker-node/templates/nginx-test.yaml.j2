apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
  namespace: default
  annotations:
    monitoring: "true"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "512Mi"
            cpu: "512m"
          requests:
            memory: "128Mi"
            cpu: "128m"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc-lb
  namespace: default
  labels:
    app: nginx
  annotations:
    # allow shared-ip
    metallb.universe.tf/allow-sharead-ip: shared-key-for-a-specific-web-sites
    #metallb.universe.tf/address-pool: ip-pool-for-web-sites
    metallb.universe.tf/address-pool: lb-lan-ip-pool
    # select kube-router loadbalance method: lc, rr, sh, dh
    #kube-router.io/service.scheduler=lc
    # DSR - direct service response return - need kube-router enable dsr related setting
    #kube-router.io/service.dsr=tunnel
### for NodePort type
#spec:
#  ports:
#  - nodePort: 40080
#    port: 80
#    protocol: TCP
#    targetPort: 80
#  selector:
#    app: nginx
#  type: NodePort
#
### for LoadBalancer type
spec:
  type: LoadBalancer
  # use Local for node attract traffic of service when there are running service pod
  # (if not set or set Cluster, will can not connect from node no running sevice pod, e.g., master node)
  #externalTrafficPolicy: Local
  externalTrafficPolicy: Cluster
  #loadBalancerIP: 10.0.0.244
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
#status:
#  loadBalancer:
#    ingress:
#    - ip: 10.0.0.244
