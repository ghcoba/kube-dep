
PLAY [node1] ************************************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************
Wednesday 27 February 2019  22:43:58 +0800 (0:00:00.086)       0:00:00.087 **** 
ok: [node1]

TASK [cluster-defaults : configure kubenertes default vars] *************************************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:01.161)       0:00:01.248 **** 
ok: [node1] => {
    "msg": "check roles/cluster-defaults/defaults/main.yml"
}

TASK [cluster-defaults : INCLUDE VAR user.yml - system user and user group for kubernetes] ******************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.071)       0:00:01.319 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR path.yml - system dir path and config path] ****************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.074)       0:00:01.394 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR deploy-path.yml - deploy data path] ************************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.077)       0:00:01.472 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-cache-path.yml - cert cache path] *********************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.072)       0:00:01.544 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-backup-path.yml - cert backup path] *******************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.072)       0:00:01.616 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR network.yml - system network settings] *********************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.071)       0:00:01.688 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR kube-core-service-network.yml] *****************************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.072)       0:00:01.761 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR docker-https-proxy.yml] ************************************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.073)       0:00:01.835 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR encryption-key.yml - encrypt key for bootstrap auth] *******************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.072)       0:00:01.908 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR tls-bootstrap-token.yml - bootstrap auth] ******************************************************************************
Wednesday 27 February 2019  22:43:59 +0800 (0:00:00.072)       0:00:01.980 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR calico-default-setting.yml - calico] ***********************************************************************************
Wednesday 27 February 2019  22:44:00 +0800 (0:00:00.072)       0:00:02.052 **** 
ok: [node1]

TASK [install-cfssl : configure start install-cfssl task main] **********************************************************************************************
Wednesday 27 February 2019  22:44:00 +0800 (0:00:00.077)       0:00:02.129 **** 
ok: [node1] => {
    "msg": "check tracing - start install-cfssl task main"
}

TASK [install-cfssl : install cfssl utility] ****************************************************************************************************************
Wednesday 27 February 2019  22:44:00 +0800 (0:00:00.105)       0:00:02.235 **** 
changed: [node1 -> node1] => (item=cfssl)
changed: [node1 -> node1] => (item=cfssljson)
changed: [node1 -> node1] => (item=cfssl-certinfo)
changed: [node1 -> node1] => (item=cfssl-newkey)
changed: [node1 -> node1] => (item=cfssl-scan)

TASK [common : create ansible temp directory] ***************************************************************************************************************
Wednesday 27 February 2019  22:44:06 +0800 (0:00:06.442)       0:00:08.677 **** 
ok: [node1]

TASK [gen-root-ca-cert : traceing in gen-root-ca-cert/task/main.yml] ****************************************************************************************
Wednesday 27 February 2019  22:44:07 +0800 (0:00:00.521)       0:00:09.199 **** 
ok: [node1 -> node1] => {
    "msg": "check tracing - starting gen-root-ca-cert task main"
}

TASK [gen-root-ca-cert : create temp exchange directory on ansible machine] *********************************************************************************
Wednesday 27 February 2019  22:44:07 +0800 (0:00:00.094)       0:00:09.293 **** 
changed: [node1 -> localhost]

TASK [gen-root-ca-cert : check ca-config directory exist] ***************************************************************************************************
Wednesday 27 February 2019  22:44:07 +0800 (0:00:00.376)       0:00:09.670 **** 
ok: [node1 -> node1]

TASK [gen-root-ca-cert : prompt ca-config directory exist result - not exist] *******************************************************************************
Wednesday 27 February 2019  22:44:07 +0800 (0:00:00.271)       0:00:09.941 **** 
ok: [node1 -> node1] => {
    "msg": "ca-config directory not exist. will continue to generate root ca cert..."
}

TASK [gen-root-ca-cert : prompt ca-config directory exist result - exist] ***********************************************************************************
Wednesday 27 February 2019  22:44:08 +0800 (0:00:00.129)       0:00:10.070 **** 
skipping: [node1]

TASK [gen-root-ca-cert : create ca-config and root ca directory] ********************************************************************************************
Wednesday 27 February 2019  22:44:08 +0800 (0:00:00.092)       0:00:10.163 **** 
changed: [node1 -> node1] => (item=/etc/cert-cache/ca-config)
changed: [node1 -> node1] => (item=/etc/cert-cache/ca)

TASK [gen-root-ca-cert : prompt exec_copy_ca_cfg_to_cache notified] *****************************************************************************************
Wednesday 27 February 2019  22:44:08 +0800 (0:00:00.466)       0:00:10.630 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start copy ca-config and ca-csr to remote cache ..."
}

TASK [gen-root-ca-cert : copy ca-config and ca-csr to remote cache] *****************************************************************************************
Wednesday 27 February 2019  22:44:08 +0800 (0:00:00.128)       0:00:10.759 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca-csr.json)

TASK [gen-root-ca-cert : create time stamp record] **********************************************************************************************************
Wednesday 27 February 2019  22:44:10 +0800 (0:00:01.348)       0:00:12.108 **** 
changed: [node1 -> node1]

TASK [gen-root-ca-cert : log time stamp record on local] ****************************************************************************************************
Wednesday 27 February 2019  22:44:10 +0800 (0:00:00.259)       0:00:12.368 **** 
changed: [node1 -> localhost]

TASK [gen-root-ca-cert : push record on local to remote] ****************************************************************************************************
Wednesday 27 February 2019  22:44:10 +0800 (0:00:00.378)       0:00:12.746 **** 
changed: [node1 -> node1]

TASK [gen-root-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:11 +0800 (0:00:00.759)       0:00:13.505 **** 
ok: [node1 -> node1] => {
    "msg": ". exit copy-ca-cfg.yml"
}

TASK [gen-root-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:11 +0800 (0:00:00.134)       0:00:13.639 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start generating root ca cert ..."
}

TASK [gen-root-ca-cert : fetch config files to ansbile] *****************************************************************************************************
Wednesday 27 February 2019  22:44:11 +0800 (0:00:00.133)       0:00:13.773 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca-csr.json)

TASK [gen-root-ca-cert : copy fetched config files to ca dir] ***********************************************************************************************
Wednesday 27 February 2019  22:44:12 +0800 (0:00:00.676)       0:00:14.449 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca-csr.json)

TASK [gen-root-ca-cert : copy gen root ca script] ***********************************************************************************************************
Wednesday 27 February 2019  22:44:13 +0800 (0:00:01.369)       0:00:15.818 **** 
changed: [node1 -> node1]

TASK [gen-root-ca-cert : generate root ca, cert on node-0 of cluster master] ********************************************************************************
Wednesday 27 February 2019  22:44:14 +0800 (0:00:00.757)       0:00:16.576 **** 
changed: [node1 -> node1]

TASK [gen-root-ca-cert : prompt exec state] *****************************************************************************************************************
Wednesday 27 February 2019  22:44:15 +0800 (0:00:00.679)       0:00:17.255 **** 
ok: [node1 -> node1] => {
    "msg": "exiting gen_ca_cert."
}

TASK [gen-root-ca-cert : create time stamp record] **********************************************************************************************************
Wednesday 27 February 2019  22:44:15 +0800 (0:00:00.131)       0:00:17.386 **** 
changed: [node1 -> node1]

TASK [gen-root-ca-cert : log time stamp record] *************************************************************************************************************
Wednesday 27 February 2019  22:44:15 +0800 (0:00:00.262)       0:00:17.649 **** 
changed: [node1 -> localhost]

TASK [gen-root-ca-cert : push record on local to remote] ****************************************************************************************************
Wednesday 27 February 2019  22:44:16 +0800 (0:00:00.386)       0:00:18.035 **** 
changed: [node1 -> node1]

TASK [gen-root-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:16 +0800 (0:00:00.763)       0:00:18.799 **** 
ok: [node1 -> node1] => {
    "msg": ". exit gen-ca-cert.yml"
}

TASK [gen-root-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:16 +0800 (0:00:00.131)       0:00:18.930 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start fetch ca-config, ca-csr, ca, cert files back ..."
}

TASK [gen-root-ca-cert : backup ca-config, ca-scr, timestamp files to ansible] ******************************************************************************
Wednesday 27 February 2019  22:44:17 +0800 (0:00:00.197)       0:00:19.128 **** 
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=timestamp.log)

TASK [gen-root-ca-cert : backup ca, cert, timestamp files to ansible] ***************************************************************************************
Wednesday 27 February 2019  22:44:17 +0800 (0:00:00.730)       0:00:19.858 **** 
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)

TASK [gen-root-ca-cert : prompt exec next] ******************************************************************************************************************
Wednesday 27 February 2019  22:44:19 +0800 (0:00:01.234)       0:00:21.093 **** 
ok: [node1 -> node1] => {
    "msg": "exiting fetch_back_root_ca"
}

TASK [gen-root-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:19 +0800 (0:00:00.218)       0:00:21.311 **** 
ok: [node1 -> node1] => {
    "msg": ". exit fetch-back-root-ca.yml"
}

PLAY [node1] ************************************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************
Wednesday 27 February 2019  22:44:19 +0800 (0:00:00.207)       0:00:21.519 **** 
ok: [node1]

TASK [cluster-defaults : configure kubenertes default vars] *************************************************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.584)       0:00:22.103 **** 
ok: [node1] => {
    "msg": "check roles/cluster-defaults/defaults/main.yml"
}

TASK [cluster-defaults : INCLUDE VAR user.yml - system user and user group for kubernetes] ******************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.146)       0:00:22.250 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR path.yml - system dir path and config path] ****************************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.150)       0:00:22.400 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR deploy-path.yml - deploy data path] ************************************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.151)       0:00:22.551 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-cache-path.yml - cert cache path] *********************************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.146)       0:00:22.698 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-backup-path.yml - cert backup path] *******************************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.150)       0:00:22.848 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR network.yml - system network settings] *********************************************************************************
Wednesday 27 February 2019  22:44:20 +0800 (0:00:00.150)       0:00:22.999 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR kube-core-service-network.yml] *****************************************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.150)       0:00:23.150 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR docker-https-proxy.yml] ************************************************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.154)       0:00:23.304 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR encryption-key.yml - encrypt key for bootstrap auth] *******************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.140)       0:00:23.444 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR tls-bootstrap-token.yml - bootstrap auth] ******************************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.128)       0:00:23.573 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR calico-default-setting.yml - calico] ***********************************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.128)       0:00:23.702 **** 
ok: [node1]

TASK [gen-kube-ca-cert : traceing in gen-kube-ca-cert/task/main.yml] ****************************************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.156)       0:00:23.858 **** 
ok: [node1 -> node1] => {
    "msg": "check tracing - starting gen-kube-ca-cert task main"
}

TASK [gen-kube-ca-cert : check cert-cache directory exist] **************************************************************************************************
Wednesday 27 February 2019  22:44:21 +0800 (0:00:00.157)       0:00:24.016 **** 
ok: [node1 -> node1]

TASK [gen-kube-ca-cert : check cert-cache ca directory exist] ***********************************************************************************************
Wednesday 27 February 2019  22:44:22 +0800 (0:00:00.413)       0:00:24.429 **** 
ok: [node1 -> node1]

TASK [gen-kube-ca-cert : check cert-cache ca-configdirectory exist] *****************************************************************************************
Wednesday 27 February 2019  22:44:22 +0800 (0:00:00.391)       0:00:24.820 **** 
ok: [node1 -> node1]

TASK [gen-kube-ca-cert : end play if cer-cache dir not exist] ***********************************************************************************************
Wednesday 27 February 2019  22:44:23 +0800 (0:00:00.385)       0:00:25.205 **** 
skipping: [node1]

TASK [gen-kube-ca-cert : check kubernetes cert cache directory exist] ***************************************************************************************
Wednesday 27 February 2019  22:44:23 +0800 (0:00:00.141)       0:00:25.347 **** 
ok: [node1 -> node1]

TASK [gen-kube-ca-cert : prompt cache kubernetes directory exist result - not exist] ************************************************************************
Wednesday 27 February 2019  22:44:23 +0800 (0:00:00.442)       0:00:25.789 **** 
ok: [node1 -> node1] => {
    "msg": "cache kubernetes directory not exist. will continue to generate kube ca cert..."
}

TASK [gen-kube-ca-cert : prompt cache kubernetes directory exist result - exist] ****************************************************************************
Wednesday 27 February 2019  22:44:23 +0800 (0:00:00.188)       0:00:25.978 **** 
skipping: [node1]

TASK [gen-kube-ca-cert : create kube directories] ***********************************************************************************************************
Wednesday 27 February 2019  22:44:24 +0800 (0:00:00.113)       0:00:26.091 **** 
changed: [node1 -> node1] => (item=/etc/cert-cache/kubernetes)
changed: [node1 -> node1] => (item=/etc/cert-cache/kube-admin)
changed: [node1 -> node1] => (item=/etc/cert-cache/kube-apiserver)
changed: [node1 -> node1] => (item=/etc/cert-cache/kube-controller-manager)
changed: [node1 -> node1] => (item=/etc/cert-cache/kube-scheduler)
changed: [node1 -> node1] => (item=/etc/cert-cache/kube-proxy)
changed: [node1 -> node1] => (item=/etc/cert-cache/kube-serviceaccount)

TASK [gen-kube-ca-cert : prompt exec_copy_root_ca_to_cache notified] ****************************************************************************************
Wednesday 27 February 2019  22:44:25 +0800 (0:00:01.758)       0:00:27.850 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start copy root ca-config, ca-pem, ca-key.pem to remote cache ..."
}

TASK [gen-kube-ca-cert : fetch ca-config.json to ansible temp dir] ******************************************************************************************
Wednesday 27 February 2019  22:44:25 +0800 (0:00:00.135)       0:00:27.985 **** 
ok: [node1 -> node1] => (item=ca-config.json)

TASK [gen-kube-ca-cert : copy ca-config.json to kube cache] *************************************************************************************************
Wednesday 27 February 2019  22:44:26 +0800 (0:00:00.349)       0:00:28.335 **** 
changed: [node1 -> node1] => (item=ca-config.json)

TASK [gen-kube-ca-cert : fetch ca cert to ansible temp dir] *************************************************************************************************
Wednesday 27 February 2019  22:44:27 +0800 (0:00:00.892)       0:00:29.228 **** 
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)

TASK [gen-kube-ca-cert : copy ca cert to kube cache] ********************************************************************************************************
Wednesday 27 February 2019  22:44:27 +0800 (0:00:00.605)       0:00:29.833 **** 
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:29 +0800 (0:00:01.620)       0:00:31.453 **** 
ok: [node1 -> node1] => {
    "msg": ". exit copy-root-ca-to-cache.yml (to kube cache))"
}

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:29 +0800 (0:00:00.132)       0:00:31.586 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start generating kube ca cert ..."
}

TASK [gen-kube-ca-cert : generate bootstrap token file] *****************************************************************************************************
Wednesday 27 February 2019  22:44:29 +0800 (0:00:00.134)       0:00:31.721 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : get expiration time for bootstrap token] *******************************************************************************************
Wednesday 27 February 2019  22:44:30 +0800 (0:00:00.741)       0:00:32.463 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : generate tls bootstrap token secret file to kube cache] ****************************************************************************
Wednesday 27 February 2019  22:44:30 +0800 (0:00:00.360)       0:00:32.824 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : copy shell script to /etc/cert-cache/kubernetes] ***********************************************************************************
Wednesday 27 February 2019  22:44:31 +0800 (0:00:00.776)       0:00:33.600 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : gen kube ca certs kubernetes services] *********************************************************************************************
Wednesday 27 February 2019  22:44:32 +0800 (0:00:00.909)       0:00:34.509 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : prompt exec state] *****************************************************************************************************************
Wednesday 27 February 2019  22:44:36 +0800 (0:00:03.632)       0:00:38.142 **** 
ok: [node1 -> node1] => {
    "msg": "exiting gen_kube_ca_cert."
}

TASK [gen-kube-ca-cert : create time stamp record] **********************************************************************************************************
Wednesday 27 February 2019  22:44:36 +0800 (0:00:00.132)       0:00:38.274 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : log time stamp record] *************************************************************************************************************
Wednesday 27 February 2019  22:44:36 +0800 (0:00:00.378)       0:00:38.653 **** 
changed: [node1 -> localhost]

TASK [gen-kube-ca-cert : push record on local to remote] ****************************************************************************************************
Wednesday 27 February 2019  22:44:37 +0800 (0:00:00.387)       0:00:39.041 **** 
changed: [node1 -> node1]

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:44:38 +0800 (0:00:01.021)       0:00:40.063 **** 
ok: [node1 -> node1] => {
    "msg": ". exit gen-kube-ca-cert.yml"
}

TASK [gen-kube-ca-cert : prompt exec_populate_ca_cert_from_kube_cache notified] *****************************************************************************
Wednesday 27 February 2019  22:44:38 +0800 (0:00:00.132)       0:00:40.195 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start populate ca cert from kube cache ..."
}

TASK [gen-kube-ca-cert : fetch all cert files to ansible temp dir] ******************************************************************************************
Wednesday 27 February 2019  22:44:38 +0800 (0:00:00.188)       0:00:40.384 **** 
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca.pem)
ok: [node1 -> node1] => (item=ca-key.pem)
ok: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=kube-admin-csr.json)
changed: [node1 -> node1] => (item=kube-admin.csr)
changed: [node1 -> node1] => (item=kube-admin.pem)
changed: [node1 -> node1] => (item=kube-admin-key.pem)
changed: [node1 -> node1] => (item=kube-apiserver-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver.csr)
changed: [node1 -> node1] => (item=kube-apiserver.pem)
changed: [node1 -> node1] => (item=kube-apiserver-key.pem)
changed: [node1 -> node1] => (item=kube-apiserver-client-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver-client.csr)
changed: [node1 -> node1] => (item=kube-apiserver-client.pem)
changed: [node1 -> node1] => (item=kube-apiserver-client-key.pem)
changed: [node1 -> node1] => (item=token.csv)
changed: [node1 -> node1] => (item=tls-bootstrap-token.yaml)
changed: [node1 -> node1] => (item=kube-controller-manager-csr.json)
changed: [node1 -> node1] => (item=kube-controller-manager.csr)
changed: [node1 -> node1] => (item=kube-controller-manager.pem)
changed: [node1 -> node1] => (item=kube-controller-manager-key.pem)
changed: [node1 -> node1] => (item=kube-scheduler-csr.json)
changed: [node1 -> node1] => (item=kube-scheduler.csr)
changed: [node1 -> node1] => (item=kube-scheduler.pem)
changed: [node1 -> node1] => (item=kube-scheduler-key.pem)
changed: [node1 -> node1] => (item=kube-proxy-csr.json)
changed: [node1 -> node1] => (item=kube-proxy.csr)
changed: [node1 -> node1] => (item=kube-proxy.pem)
changed: [node1 -> node1] => (item=kube-proxy-key.pem)
changed: [node1 -> node1] => (item=kube-serviceaccount-csr.json)
changed: [node1 -> node1] => (item=kube-serviceaccount.csr)
changed: [node1 -> node1] => (item=kube-serviceaccount.pem)
changed: [node1 -> node1] => (item=kube-serviceaccount-key.pem)

TASK [gen-kube-ca-cert : copy kube-admin cert from kube cache to kube-admin cache directory] ****************************************************************
Wednesday 27 February 2019  22:44:46 +0800 (0:00:07.782)       0:00:48.167 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=kube-admin-csr.json)
changed: [node1 -> node1] => (item=kube-admin.csr)
changed: [node1 -> node1] => (item=kube-admin.pem)
changed: [node1 -> node1] => (item=kube-admin-key.pem)

TASK [gen-kube-ca-cert : copy kube-apiserver cert from kube cache to kube-apiserver cache directory] ********************************************************
Wednesday 27 February 2019  22:44:52 +0800 (0:00:06.305)       0:00:54.472 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=token.csv)
changed: [node1 -> node1] => (item=tls-bootstrap-token.yaml)
changed: [node1 -> node1] => (item=kube-apiserver-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver.csr)
changed: [node1 -> node1] => (item=kube-apiserver.pem)
changed: [node1 -> node1] => (item=kube-apiserver-key.pem)
changed: [node1 -> node1] => (item=kube-apiserver-client-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver-client.csr)
changed: [node1 -> node1] => (item=kube-apiserver-client.pem)
changed: [node1 -> node1] => (item=kube-apiserver-client-key.pem)

TASK [gen-kube-ca-cert : copy kube-controller-manager cert from kube cache to kube-controller-manager cache directory] **************************************
Wednesday 27 February 2019  22:45:03 +0800 (0:00:10.799)       0:01:05.271 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=kube-controller-manager-csr.json)
changed: [node1 -> node1] => (item=kube-controller-manager.csr)
changed: [node1 -> node1] => (item=kube-controller-manager.pem)
changed: [node1 -> node1] => (item=kube-controller-manager-key.pem)

TASK [gen-kube-ca-cert : copy kube-scheduler cert from kube cache to kube-scheduler cache directory] ********************************************************
Wednesday 27 February 2019  22:45:09 +0800 (0:00:06.202)       0:01:11.474 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=kube-scheduler-csr.json)
changed: [node1 -> node1] => (item=kube-scheduler.csr)
changed: [node1 -> node1] => (item=kube-scheduler.pem)
changed: [node1 -> node1] => (item=kube-scheduler-key.pem)

TASK [gen-kube-ca-cert : copy kube-proxy cert from kube cache to kube-proxy cache directory] ****************************************************************
Wednesday 27 February 2019  22:45:15 +0800 (0:00:06.394)       0:01:17.869 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=kube-proxy-csr.json)
changed: [node1 -> node1] => (item=kube-proxy.csr)
changed: [node1 -> node1] => (item=kube-proxy.pem)
changed: [node1 -> node1] => (item=kube-proxy-key.pem)

TASK [gen-kube-ca-cert : copy kube-serviceaccount cert from kube cache to kube-serviceaccount cache directory] **********************************************
Wednesday 27 February 2019  22:45:22 +0800 (0:00:06.272)       0:01:24.141 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
changed: [node1 -> node1] => (item=kube-serviceaccount-csr.json)
changed: [node1 -> node1] => (item=kube-serviceaccount.csr)
changed: [node1 -> node1] => (item=kube-serviceaccount.pem)
changed: [node1 -> node1] => (item=kube-serviceaccount-key.pem)

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:45:28 +0800 (0:00:06.375)       0:01:30.517 **** 
ok: [node1 -> node1] => {
    "msg": ". exit polulate-ca-cert-from_kube-cache.yml"
}

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:45:28 +0800 (0:00:00.195)       0:01:30.712 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start fetch back ca cert from kube cache to ansible machine ..."
}

TASK [gen-kube-ca-cert : fetch all cert files of kube cache dir to ansible kube backup dir] *****************************************************************
Wednesday 27 February 2019  22:45:28 +0800 (0:00:00.247)       0:01:30.960 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=kube-admin-csr.json)
changed: [node1 -> node1] => (item=kube-admin.csr)
changed: [node1 -> node1] => (item=kube-admin.pem)
changed: [node1 -> node1] => (item=kube-admin-key.pem)
ok: [node1 -> node1] => (item=token.csv)
changed: [node1 -> node1] => (item=tls-bootstrap-token.yaml)
ok: [node1 -> node1] => (item=kube-apiserver-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver.csr)
changed: [node1 -> node1] => (item=kube-apiserver.pem)
changed: [node1 -> node1] => (item=kube-apiserver-key.pem)
ok: [node1 -> node1] => (item=kube-apiserver-client-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver-client.csr)
changed: [node1 -> node1] => (item=kube-apiserver-client.pem)
changed: [node1 -> node1] => (item=kube-apiserver-client-key.pem)
ok: [node1 -> node1] => (item=kube-controller-manager-csr.json)
changed: [node1 -> node1] => (item=kube-controller-manager.csr)
changed: [node1 -> node1] => (item=kube-controller-manager.pem)
changed: [node1 -> node1] => (item=kube-controller-manager-key.pem)
ok: [node1 -> node1] => (item=kube-scheduler-csr.json)
changed: [node1 -> node1] => (item=kube-scheduler.csr)
changed: [node1 -> node1] => (item=kube-scheduler.pem)
changed: [node1 -> node1] => (item=kube-scheduler-key.pem)
ok: [node1 -> node1] => (item=kube-proxy-csr.json)
changed: [node1 -> node1] => (item=kube-proxy.csr)
changed: [node1 -> node1] => (item=kube-proxy.pem)
changed: [node1 -> node1] => (item=kube-proxy-key.pem)
ok: [node1 -> node1] => (item=kube-serviceaccount-csr.json)
changed: [node1 -> node1] => (item=kube-serviceaccount.csr)
changed: [node1 -> node1] => (item=kube-serviceaccount.pem)
changed: [node1 -> node1] => (item=kube-serviceaccount-key.pem)

TASK [gen-kube-ca-cert : fetch kube-admin cert from remote cache] *******************************************************************************************
Wednesday 27 February 2019  22:45:36 +0800 (0:00:07.476)       0:01:38.436 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=kube-admin-csr.json)
changed: [node1 -> node1] => (item=kube-admin.csr)
changed: [node1 -> node1] => (item=kube-admin.pem)
changed: [node1 -> node1] => (item=kube-admin-key.pem)

TASK [gen-kube-ca-cert : fetch kube-apiserver cert from remote cache] ***************************************************************************************
Wednesday 27 February 2019  22:45:38 +0800 (0:00:02.167)       0:01:40.604 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=token.csv)
changed: [node1 -> node1] => (item=tls-bootstrap-token.yaml)
ok: [node1 -> node1] => (item=kube-apiserver-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver.csr)
changed: [node1 -> node1] => (item=kube-apiserver.pem)
changed: [node1 -> node1] => (item=kube-apiserver-key.pem)
ok: [node1 -> node1] => (item=kube-apiserver-client-csr.json)
changed: [node1 -> node1] => (item=kube-apiserver-client.csr)
changed: [node1 -> node1] => (item=kube-apiserver-client.pem)
changed: [node1 -> node1] => (item=kube-apiserver-client-key.pem)

TASK [gen-kube-ca-cert : fetch kube-controller-manager cert from remote cache] ******************************************************************************
Wednesday 27 February 2019  22:45:41 +0800 (0:00:03.275)       0:01:43.879 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=kube-controller-manager-csr.json)
changed: [node1 -> node1] => (item=kube-controller-manager.csr)
changed: [node1 -> node1] => (item=kube-controller-manager.pem)
changed: [node1 -> node1] => (item=kube-controller-manager-key.pem)

TASK [gen-kube-ca-cert : fetch kube-scheduler cert from remote cache] ***************************************************************************************
Wednesday 27 February 2019  22:45:43 +0800 (0:00:01.960)       0:01:45.839 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=kube-scheduler-csr.json)
changed: [node1 -> node1] => (item=kube-scheduler.csr)
changed: [node1 -> node1] => (item=kube-scheduler.pem)
changed: [node1 -> node1] => (item=kube-scheduler-key.pem)

TASK [gen-kube-ca-cert : fetch kube-proxy cert from remote cache] *******************************************************************************************
Wednesday 27 February 2019  22:45:45 +0800 (0:00:01.920)       0:01:47.760 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=kube-proxy-csr.json)
changed: [node1 -> node1] => (item=kube-proxy.csr)
changed: [node1 -> node1] => (item=kube-proxy.pem)
changed: [node1 -> node1] => (item=kube-proxy-key.pem)

TASK [gen-kube-ca-cert : fetch kube-sa cert from remote cache] **********************************************************************************************
Wednesday 27 February 2019  22:45:47 +0800 (0:00:01.891)       0:01:49.651 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node1 -> node1] => (item=kube-serviceaccount-csr.json)
changed: [node1 -> node1] => (item=kube-serviceaccount.csr)
changed: [node1 -> node1] => (item=kube-serviceaccount.pem)
changed: [node1 -> node1] => (item=kube-serviceaccount-key.pem)

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:45:49 +0800 (0:00:01.983)       0:01:51.635 **** 
ok: [node1 -> node1] => {
    "msg": "exiting fetch_back_kube_ca_cert"
}

TASK [gen-kube-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:45:49 +0800 (0:00:00.194)       0:01:51.829 **** 
ok: [node1 -> node1] => {
    "msg": ". exit fetch-back-kube-ca-cert.yml"
}

PLAY [node1] ************************************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************
Wednesday 27 February 2019  22:45:50 +0800 (0:00:00.243)       0:01:52.072 **** 
ok: [node1]

TASK [cluster-defaults : configure kubenertes default vars] *************************************************************************************************
Wednesday 27 February 2019  22:45:50 +0800 (0:00:00.628)       0:01:52.700 **** 
ok: [node1] => {
    "msg": "check roles/cluster-defaults/defaults/main.yml"
}

TASK [cluster-defaults : INCLUDE VAR user.yml - system user and user group for kubernetes] ******************************************************************
Wednesday 27 February 2019  22:45:50 +0800 (0:00:00.092)       0:01:52.792 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR path.yml - system dir path and config path] ****************************************************************************
Wednesday 27 February 2019  22:45:50 +0800 (0:00:00.095)       0:01:52.888 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR deploy-path.yml - deploy data path] ************************************************************************************
Wednesday 27 February 2019  22:45:50 +0800 (0:00:00.099)       0:01:52.988 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-cache-path.yml - cert cache path] *********************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.095)       0:01:53.084 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-backup-path.yml - cert backup path] *******************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.097)       0:01:53.182 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR network.yml - system network settings] *********************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.092)       0:01:53.274 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR kube-core-service-network.yml] *****************************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.089)       0:01:53.364 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR docker-https-proxy.yml] ************************************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.080)       0:01:53.444 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR encryption-key.yml - encrypt key for bootstrap auth] *******************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.078)       0:01:53.523 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR tls-bootstrap-token.yml - bootstrap auth] ******************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.079)       0:01:53.603 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR calico-default-setting.yml - calico] ***********************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.079)       0:01:53.682 **** 
ok: [node1]

TASK [gen-etcd-ca-cert : traceing in gen-etcd-ca-cert/task/main.yml] ****************************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.106)       0:01:53.789 **** 
ok: [node1 -> node1] => {
    "msg": "check tracing - starting gen-etcd-ca-cert task main"
}

TASK [gen-etcd-ca-cert : check cert-cache directory exist] **************************************************************************************************
Wednesday 27 February 2019  22:45:51 +0800 (0:00:00.109)       0:01:53.899 **** 
ok: [node1 -> node1]

TASK [gen-etcd-ca-cert : check cert-cache ca directory exist] ***********************************************************************************************
Wednesday 27 February 2019  22:45:52 +0800 (0:00:00.390)       0:01:54.289 **** 
ok: [node1 -> node1]

TASK [gen-etcd-ca-cert : check cert-cache ca-config directory exist] ****************************************************************************************
Wednesday 27 February 2019  22:45:52 +0800 (0:00:00.381)       0:01:54.670 **** 
ok: [node1 -> node1]

TASK [gen-etcd-ca-cert : end play if cer-cache dir not exist] ***********************************************************************************************
Wednesday 27 February 2019  22:45:53 +0800 (0:00:00.470)       0:01:55.140 **** 
skipping: [node1]

TASK [gen-etcd-ca-cert : check etcd cert cache directory exist] *********************************************************************************************
Wednesday 27 February 2019  22:45:53 +0800 (0:00:00.193)       0:01:55.334 **** 
ok: [node1 -> node1]

TASK [gen-etcd-ca-cert : prompt etcd cache directory exist result - not exist] ******************************************************************************
Wednesday 27 February 2019  22:45:53 +0800 (0:00:00.361)       0:01:55.696 **** 
ok: [node1 -> node1] => {
    "msg": "etcd cache directory not exist. will continue to generate etcd ca cert..."
}

TASK [gen-etcd-ca-cert : prompt etcd cache directory exist result - exist] **********************************************************************************
Wednesday 27 February 2019  22:45:53 +0800 (0:00:00.138)       0:01:55.835 **** 
skipping: [node1]

TASK [gen-etcd-ca-cert : create etcd and flanneld dir] ******************************************************************************************************
Wednesday 27 February 2019  22:45:53 +0800 (0:00:00.107)       0:01:55.942 **** 
changed: [node1 -> node1] => (item=/etc/cert-cache/etcd)
changed: [node1 -> node1] => (item=/etc/cert-cache/flanneld)

TASK [gen-etcd-ca-cert : prompt exec_copy_root_ca_to_etcd_cache notified] ***********************************************************************************
Wednesday 27 February 2019  22:45:54 +0800 (0:00:00.704)       0:01:56.646 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start copy root ca-config, ca-pem, ca-key.pem to remote etcd cache ..."
}

TASK [gen-etcd-ca-cert : fetch cluster master ca-config.json to ansible temp dir] ***************************************************************************
Wednesday 27 February 2019  22:45:54 +0800 (0:00:00.134)       0:01:56.780 **** 
ok: [node1 -> node1] => (item=ca-config.json)

TASK [gen-etcd-ca-cert : copy cluster master ca-config.json to kube cache] **********************************************************************************
Wednesday 27 February 2019  22:45:55 +0800 (0:00:00.397)       0:01:57.177 **** 
changed: [node1 -> node1] => (item=ca-config.json)

TASK [gen-etcd-ca-cert : copy cluster master ca-config.json as root ca-config of etcd cluster] **************************************************************
Wednesday 27 February 2019  22:45:55 +0800 (0:00:00.761)       0:01:57.939 **** 
changed: [node1 -> node1] => (item=ca-config.json)

TASK [gen-etcd-ca-cert : fetch cluster master ca cert to ansible temp dir] **********************************************************************************
Wednesday 27 February 2019  22:45:56 +0800 (0:00:00.806)       0:01:58.746 **** 
ok: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
ok: [node1 -> node1] => (item=ca.pem)
ok: [node1 -> node1] => (item=ca-key.pem)

TASK [gen-etcd-ca-cert : copy cluster master ca cert to etcd cache directory] *******************************************************************************
Wednesday 27 February 2019  22:45:57 +0800 (0:00:00.959)       0:01:59.705 **** 
changed: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)

TASK [gen-etcd-ca-cert : copy cluster master ca cert as etcd root ca cert] **********************************************************************************
Wednesday 27 February 2019  22:46:00 +0800 (0:00:02.514)       0:02:02.220 **** 
changed: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:02 +0800 (0:00:02.517)       0:02:04.737 **** 
ok: [node1 -> node1] => {
    "msg": ". exit copy-root-ca-to-etcd-cache.yml"
}

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:02 +0800 (0:00:00.130)       0:02:04.868 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start generating etcd ca cert ..."
}

TASK [gen-etcd-ca-cert : copy shell script to /etc/cert-cache/etcd] *****************************************************************************************
Wednesday 27 February 2019  22:46:02 +0800 (0:00:00.130)       0:02:04.999 **** 
changed: [node1 -> node1]

TASK [gen-etcd-ca-cert : gen etcd ca certs kubernetes services] *********************************************************************************************
Wednesday 27 February 2019  22:46:04 +0800 (0:00:01.045)       0:02:06.045 **** 
changed: [node1 -> node1]

TASK [gen-etcd-ca-cert : prompt exec state] *****************************************************************************************************************
Wednesday 27 February 2019  22:46:06 +0800 (0:00:02.286)       0:02:08.331 **** 
ok: [node1 -> node1] => {
    "msg": "exiting gen_etcd_ca_cert."
}

TASK [gen-etcd-ca-cert : create time stamp record] **********************************************************************************************************
Wednesday 27 February 2019  22:46:06 +0800 (0:00:00.132)       0:02:08.463 **** 
changed: [node1 -> node1]

TASK [gen-etcd-ca-cert : log time stamp record] *************************************************************************************************************
Wednesday 27 February 2019  22:46:06 +0800 (0:00:00.370)       0:02:08.834 **** 
changed: [node1 -> localhost]

TASK [gen-etcd-ca-cert : push record on local to remote] ****************************************************************************************************
Wednesday 27 February 2019  22:46:07 +0800 (0:00:00.389)       0:02:09.223 **** 
changed: [node1 -> node1]

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:08 +0800 (0:00:00.994)       0:02:10.218 **** 
ok: [node1 -> node1] => {
    "msg": ". exit gen-etcd-ca-cert.yml"
}

TASK [gen-etcd-ca-cert : prompt exec_populate_ca_cert_from_etcd_cache notified] *****************************************************************************
Wednesday 27 February 2019  22:46:08 +0800 (0:00:00.192)       0:02:10.410 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start populate ca cert from etcd cache ..."
}

TASK [gen-etcd-ca-cert : fetch all cert files to ansible temp dir] ******************************************************************************************
Wednesday 27 February 2019  22:46:08 +0800 (0:00:00.208)       0:02:10.619 **** 
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca.pem)
ok: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=etcd-ca.pem)
changed: [node1 -> node1] => (item=etcd-ca-key.pem)
changed: [node1 -> node1] => (item=flanneld-csr.json)
changed: [node1 -> node1] => (item=flanneld.csr)
changed: [node1 -> node1] => (item=flanneld.pem)
changed: [node1 -> node1] => (item=flanneld-key.pem)
ok: [node1 -> node1] => (item=timestamp.log)

TASK [gen-etcd-ca-cert : copy flanneld ca cert and config to flanneld cache directory] **********************************************************************
Wednesday 27 February 2019  22:46:11 +0800 (0:00:02.423)       0:02:13.043 **** 
changed: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=etcd-ca.pem)
changed: [node1 -> node1] => (item=etcd-ca-key.pem)
changed: [node1 -> node1] => (item=flanneld-csr.json)
changed: [node1 -> node1] => (item=flanneld.csr)
changed: [node1 -> node1] => (item=flanneld.pem)
changed: [node1 -> node1] => (item=flanneld-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:18 +0800 (0:00:07.713)       0:02:20.756 **** 
ok: [node1 -> node1] => {
    "msg": ". exit polulate-ca-cert-from_kube-cache.yml (copy flanneld to its cache dir)"
}

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:18 +0800 (0:00:00.191)       0:02:20.947 **** 
ok: [node1 -> node1] => {
    "msg": "notified -> start fetch back ca cert from etcd and flannel cache to ansible machine ..."
}

TASK [gen-etcd-ca-cert : fetch all cert files of etcd cache dir to ansible kube backup dir] *****************************************************************
Wednesday 27 February 2019  22:46:19 +0800 (0:00:00.226)       0:02:21.174 **** 
ok: [node1 -> node1] => (item=ca-config.json)
ok: [node1 -> node1] => (item=ca-csr.json)
changed: [node1 -> node1] => (item=ca.csr)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
ok: [node1 -> node1] => (item=etcd-ca-config.json)
ok: [node1 -> node1] => (item=etcd-ca-csr.json)
changed: [node1 -> node1] => (item=etcd-ca.csr)
changed: [node1 -> node1] => (item=etcd-ca.pem)
changed: [node1 -> node1] => (item=etcd-ca-key.pem)
ok: [node1 -> node1] => (item=etcd-client-csr.json)
changed: [node1 -> node1] => (item=etcd-client.csr)
changed: [node1 -> node1] => (item=etcd-client.pem)
changed: [node1 -> node1] => (item=etcd-client-key.pem)
ok: [node1 -> node1] => (item=etcd-server-csr.json)
changed: [node1 -> node1] => (item=etcd-server.csr)
changed: [node1 -> node1] => (item=etcd-server.pem)
changed: [node1 -> node1] => (item=etcd-server-key.pem)
ok: [node1 -> node1] => (item=etcd-peer-csr.json)
changed: [node1 -> node1] => (item=etcd-peer.csr)
changed: [node1 -> node1] => (item=etcd-peer.pem)
changed: [node1 -> node1] => (item=etcd-peer-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)

TASK [gen-etcd-ca-cert : fetch flanneld cert from remote cache] *********************************************************************************************
Wednesday 27 February 2019  22:46:24 +0800 (0:00:05.288)       0:02:26.462 **** 
ok: [node1 -> node1] => (item=ca-config.json)
changed: [node1 -> node1] => (item=ca.pem)
changed: [node1 -> node1] => (item=ca-key.pem)
changed: [node1 -> node1] => (item=etcd-ca.pem)
changed: [node1 -> node1] => (item=etcd-ca-key.pem)
ok: [node1 -> node1] => (item=flanneld-csr.json)
changed: [node1 -> node1] => (item=flanneld.csr)
changed: [node1 -> node1] => (item=flanneld.pem)
changed: [node1 -> node1] => (item=flanneld-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:26 +0800 (0:00:02.415)       0:02:28.877 **** 
ok: [node1 -> node1] => {
    "msg": "exiting fetch_back_etcd_ca_cert"
}

TASK [gen-etcd-ca-cert : debug] *****************************************************************************************************************************
Wednesday 27 February 2019  22:46:27 +0800 (0:00:00.204)       0:02:29.082 **** 
ok: [node1 -> node1] => {
    "msg": ". exit fetch-back-etcd-ca-cert.yml"
}

PLAY [etcd-nodes] *******************************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************
Wednesday 27 February 2019  22:46:27 +0800 (0:00:00.177)       0:02:29.260 **** 
ok: [node12]
ok: [node13]
ok: [node11]

TASK [cluster-defaults : configure kubenertes default vars] *************************************************************************************************
Wednesday 27 February 2019  22:46:28 +0800 (0:00:01.754)       0:02:31.014 **** 
ok: [node11] => {
    "msg": "check roles/cluster-defaults/defaults/main.yml"
}

TASK [cluster-defaults : INCLUDE VAR user.yml - system user and user group for kubernetes] ******************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.088)       0:02:31.103 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR path.yml - system dir path and config path] ****************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.088)       0:02:31.191 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR deploy-path.yml - deploy data path] ************************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.093)       0:02:31.285 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR cert-cache-path.yml - cert cache path] *********************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.090)       0:02:31.375 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR cert-backup-path.yml - cert backup path] *******************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.088)       0:02:31.463 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR network.yml - system network settings] *********************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.078)       0:02:31.542 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR kube-core-service-network.yml] *****************************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.078)       0:02:31.620 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR docker-https-proxy.yml] ************************************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.080)       0:02:31.700 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR encryption-key.yml - encrypt key for bootstrap auth] *******************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.075)       0:02:31.776 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR tls-bootstrap-token.yml - bootstrap auth] ******************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.076)       0:02:31.852 **** 
ok: [node11]

TASK [cluster-defaults : INCLUDE VAR calico-default-setting.yml - calico] ***********************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.074)       0:02:31.927 **** 
ok: [node11]

TASK [create-etcd-cluster : traceing - start create-etcd-node] **********************************************************************************************
Wednesday 27 February 2019  22:46:29 +0800 (0:00:00.077)       0:02:32.005 **** 
ok: [node11] => {
    "msg": "check tracing - starting schedule-create-etcd-node"
}
ok: [node12] => {
    "msg": "check tracing - starting schedule-create-etcd-node"
}
ok: [node13] => {
    "msg": "check tracing - starting schedule-create-etcd-node"
}

TASK [create-etcd-cluster : check etcd config directory exist] **********************************************************************************************
Wednesday 27 February 2019  22:46:30 +0800 (0:00:00.274)       0:02:32.279 **** 
ok: [node11 -> node11]

TASK [create-etcd-cluster : check etcd cert directory exist] ************************************************************************************************
Wednesday 27 February 2019  22:46:30 +0800 (0:00:00.381)       0:02:32.661 **** 
ok: [node11 -> node11]

TASK [create-etcd-cluster : create etcd group on defined node] **********************************************************************************************
Wednesday 27 February 2019  22:46:31 +0800 (0:00:00.372)       0:02:33.034 **** 
ok: [node11]
ok: [node13]
ok: [node12]

TASK [create-etcd-cluster : create system etcd user on defined node] ****************************************************************************************
Wednesday 27 February 2019  22:46:31 +0800 (0:00:00.779)       0:02:33.814 **** 
changed: [node13]
changed: [node12]
changed: [node11]

TASK [create-etcd-cluster : ensure etcd_data_path directory exist] ******************************************************************************************
Wednesday 27 February 2019  22:46:32 +0800 (0:00:00.902)       0:02:34.717 **** 
changed: [node11]
changed: [node12]
changed: [node13]

TASK [create-etcd-cluster : create etcd_cert_path directory exist] ******************************************************************************************
Wednesday 27 February 2019  22:46:33 +0800 (0:00:00.560)       0:02:35.277 **** 
changed: [node11]
changed: [node12]
changed: [node13]

TASK [create-etcd-cluster : fetch all cert files of etcd cache dir to ansible kube backup dir] **************************************************************
Wednesday 27 February 2019  22:46:33 +0800 (0:00:00.625)       0:02:35.903 **** 
ok: [node11 -> node1] => (item=etcd-ca.pem)
ok: [node12 -> node1] => (item=etcd-ca.pem)
ok: [node13 -> node1] => (item=etcd-ca.pem)
ok: [node11 -> node1] => (item=etcd-ca-key.pem)
ok: [node12 -> node1] => (item=etcd-ca-key.pem)
ok: [node13 -> node1] => (item=etcd-ca-key.pem)
changed: [node11 -> node1] => (item=etcd-client.pem)
ok: [node12 -> node1] => (item=etcd-client.pem)
ok: [node13 -> node1] => (item=etcd-client.pem)
changed: [node11 -> node1] => (item=etcd-client-key.pem)
ok: [node12 -> node1] => (item=etcd-client-key.pem)
ok: [node13 -> node1] => (item=etcd-client-key.pem)
changed: [node11 -> node1] => (item=etcd-server.pem)
ok: [node12 -> node1] => (item=etcd-server.pem)
ok: [node13 -> node1] => (item=etcd-server.pem)
changed: [node11 -> node1] => (item=etcd-server-key.pem)
ok: [node12 -> node1] => (item=etcd-server-key.pem)
ok: [node13 -> node1] => (item=etcd-server-key.pem)
changed: [node11 -> node1] => (item=etcd-peer.pem)
changed: [node11 -> node1] => (item=etcd-peer-key.pem)
ok: [node12 -> node1] => (item=etcd-peer.pem)
ok: [node13 -> node1] => (item=etcd-peer.pem)
ok: [node12 -> node1] => (item=etcd-peer-key.pem)
ok: [node13 -> node1] => (item=etcd-peer-key.pem)

TASK [create-etcd-cluster : copy all cert files to etcd cluster node] ***************************************************************************************
Wednesday 27 February 2019  22:46:37 +0800 (0:00:04.025)       0:02:39.928 **** 
changed: [node11] => (item=etcd-ca.pem)
changed: [node12] => (item=etcd-ca.pem)
changed: [node13] => (item=etcd-ca.pem)
changed: [node11] => (item=etcd-ca-key.pem)
changed: [node12] => (item=etcd-ca-key.pem)
changed: [node13] => (item=etcd-ca-key.pem)
changed: [node11] => (item=etcd-client.pem)
changed: [node12] => (item=etcd-client.pem)
changed: [node13] => (item=etcd-client.pem)
changed: [node11] => (item=etcd-client-key.pem)
changed: [node13] => (item=etcd-client-key.pem)
changed: [node12] => (item=etcd-client-key.pem)
changed: [node11] => (item=etcd-server.pem)
changed: [node12] => (item=etcd-server.pem)
changed: [node13] => (item=etcd-server.pem)
changed: [node11] => (item=etcd-server-key.pem)
changed: [node12] => (item=etcd-server-key.pem)
changed: [node13] => (item=etcd-server-key.pem)
changed: [node11] => (item=etcd-peer.pem)
changed: [node12] => (item=etcd-peer.pem)
changed: [node13] => (item=etcd-peer.pem)
changed: [node11] => (item=etcd-peer-key.pem)
changed: [node13] => (item=etcd-peer-key.pem)
changed: [node12] => (item=etcd-peer-key.pem)

TASK [create-etcd-cluster : exec copy-bin-to-etcd-node] *****************************************************************************************************
Wednesday 27 February 2019  22:46:45 +0800 (0:00:07.285)       0:02:47.213 **** 
ok: [node13] => (item=etcd)
ok: [node12] => (item=etcd)
ok: [node11] => (item=etcd)
ok: [node11] => (item=etcdctl)
ok: [node13] => (item=etcdctl)
ok: [node12] => (item=etcdctl)

TASK [create-etcd-cluster : debug] **************************************************************************************************************************
Wednesday 27 February 2019  22:46:47 +0800 (0:00:02.305)       0:02:49.519 **** 
ok: [node11] => {
    "msg": "etcd binary version 3.3.10 is installed on node11."
}
ok: [node12] => {
    "msg": "etcd binary version 3.3.10 is installed on node12."
}
ok: [node13] => {
    "msg": "etcd binary version 3.3.10 is installed on node13."
}

TASK [create-etcd-cluster : create etcd configuration file for etcd service systemd unit file] **************************************************************
Wednesday 27 February 2019  22:46:47 +0800 (0:00:00.309)       0:02:49.829 **** 
changed: [node11]
changed: [node13]
changed: [node12]

TASK [create-etcd-cluster : exec create-etcd-unit-file - create etcd service systemd unit file] *************************************************************
Wednesday 27 February 2019  22:46:49 +0800 (0:00:01.481)       0:02:51.311 **** 
ok: [node11]
ok: [node12]
ok: [node13]

TASK [create-etcd-cluster : change firewalll to enable port 2379 for all etcd cluster nodes] ****************************************************************
Wednesday 27 February 2019  22:46:50 +0800 (0:00:00.882)       0:02:52.193 **** 
changed: [node11]
changed: [node12]
changed: [node13]

TASK [create-etcd-cluster : change firewalll to enable port 2380 for all etcd cluster nodes] ****************************************************************
Wednesday 27 February 2019  22:46:51 +0800 (0:00:01.084)       0:02:53.277 **** 
changed: [node11]
changed: [node12]
changed: [node13]

TASK [create-etcd-cluster : change firewalll to enable port 4001 for all etcd cluster nodes] ****************************************************************
Wednesday 27 February 2019  22:46:52 +0800 (0:00:01.088)       0:02:54.366 **** 
changed: [node11]
changed: [node12]
changed: [node13]

TASK [create-etcd-cluster : reload firewall to take effect for etcd cluster nodes] **************************************************************************
Wednesday 27 February 2019  22:46:53 +0800 (0:00:01.006)       0:02:55.372 **** 
changed: [node11]
changed: [node12]
changed: [node13]

TASK [create-etcd-cluster : enable and start etcd service] **************************************************************************************************
Wednesday 27 February 2019  22:46:54 +0800 (0:00:01.596)       0:02:56.969 **** 
changed: [node12]
changed: [node13]
changed: [node11]

TASK [create-etcd-cluster : copy etcdctl-env.rc for etcdctl environment variables] **************************************************************************
Wednesday 27 February 2019  22:46:58 +0800 (0:00:03.823)       0:03:00.793 **** 
ok: [node11]
ok: [node13]
ok: [node12]

TASK [create-etcd-cluster : copy write-etcdctl-env.sh to /usr/local/bin] ************************************************************************************
Wednesday 27 February 2019  22:47:00 +0800 (0:00:01.520)       0:03:02.313 **** 
ok: [node11]
ok: [node12]
ok: [node13]

TASK [create-etcd-cluster : write etctctl env - append etcdctl-env.rc to /root/.bash_profile] ***************************************************************
Wednesday 27 February 2019  22:47:01 +0800 (0:00:00.977)       0:03:03.291 **** 
changed: [node11]
changed: [node12]
changed: [node13]

PLAY [kube-masters] *****************************************************************************************************************************************

TASK [Gathering Facts] **************************************************************************************************************************************
Wednesday 27 February 2019  22:47:01 +0800 (0:00:00.727)       0:03:04.019 **** 
ok: [node1]
ok: [node2]

TASK [cluster-defaults : configure kubenertes default vars] *************************************************************************************************
Wednesday 27 February 2019  22:47:02 +0800 (0:00:00.898)       0:03:04.917 **** 
ok: [node1] => {
    "msg": "check roles/cluster-defaults/defaults/main.yml"
}

TASK [cluster-defaults : INCLUDE VAR user.yml - system user and user group for kubernetes] ******************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.182)       0:03:05.100 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR path.yml - system dir path and config path] ****************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.093)       0:03:05.193 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR deploy-path.yml - deploy data path] ************************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.098)       0:03:05.291 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-cache-path.yml - cert cache path] *********************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.093)       0:03:05.385 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR cert-backup-path.yml - cert backup path] *******************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.092)       0:03:05.478 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR network.yml - system network settings] *********************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.093)       0:03:05.572 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR kube-core-service-network.yml] *****************************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.093)       0:03:05.665 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR docker-https-proxy.yml] ************************************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.094)       0:03:05.759 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR encryption-key.yml - encrypt key for bootstrap auth] *******************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.088)       0:03:05.848 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR tls-bootstrap-token.yml - bootstrap auth] ******************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.078)       0:03:05.926 **** 
ok: [node1]

TASK [cluster-defaults : INCLUDE VAR calico-default-setting.yml - calico] ***********************************************************************************
Wednesday 27 February 2019  22:47:03 +0800 (0:00:00.079)       0:03:06.006 **** 
ok: [node1]

TASK [create-kube-cluster-master : debug] *******************************************************************************************************************
Wednesday 27 February 2019  22:47:04 +0800 (0:00:00.080)       0:03:06.087 **** 
ok: [node1] => {
    "msg": "include etcd default variables ..."
}
ok: [node2] => {
    "msg": "include etcd default variables ..."
}

TASK [create-kube-cluster-master : INCLUDE VAR main.yml (in dir roles/create-etcd-cluster/defaults)] ********************************************************
Wednesday 27 February 2019  22:47:04 +0800 (0:00:00.160)       0:03:06.248 **** 
ok: [node1]
ok: [node2]

TASK [create-kube-cluster-master : debug] *******************************************************************************************************************
Wednesday 27 February 2019  22:47:04 +0800 (0:00:00.166)       0:03:06.414 **** 
ok: [node1] => {
    "msg": "etcd version: 3.3.10"
}
ok: [node2] => {
    "msg": "etcd version: 3.3.10"
}

TASK [create-kube-cluster-master : traceing - start schedule-create-master-node] ****************************************************************************
Wednesday 27 February 2019  22:47:04 +0800 (0:00:00.170)       0:03:06.585 **** 
ok: [node1] => {
    "msg": "check tracing - starting schedule-create-master-node"
}
ok: [node2] => {
    "msg": "check tracing - starting schedule-create-master-node"
}

TASK [create-kube-cluster-master : check kubernetes directory exist] ****************************************************************************************
Wednesday 27 February 2019  22:47:04 +0800 (0:00:00.197)       0:03:06.783 **** 
ok: [node1 -> node1]

TASK [create-kube-cluster-master : exec condition promp] ****************************************************************************************************
Wednesday 27 February 2019  22:47:05 +0800 (0:00:00.353)       0:03:07.136 **** 
ok: [node1] => {
    "msg": "/etc/kubernetes directory existence is False, schedule starting to create kube master node on node1"
}
ok: [node2] => {
    "msg": "/etc/kubernetes directory existence is False, schedule starting to create kube master node on node2"
}

TASK [create-kube-cluster-master : create etcd group on defined node] ***************************************************************************************
Wednesday 27 February 2019  22:47:05 +0800 (0:00:00.184)       0:03:07.320 **** 
ok: [node2]
ok: [node1]

TASK [create-kube-cluster-master : create system etcd user on defined node] *********************************************************************************
Wednesday 27 February 2019  22:47:05 +0800 (0:00:00.370)       0:03:07.691 **** 
changed: [node1]
changed: [node2]

TASK [create-kube-cluster-master : ensure etcd_data_path directory exist] ***********************************************************************************
Wednesday 27 February 2019  22:47:06 +0800 (0:00:00.426)       0:03:08.117 **** 
changed: [node1]
changed: [node2]

TASK [create-kube-cluster-master : create system kube group] ************************************************************************************************
Wednesday 27 February 2019  22:47:06 +0800 (0:00:00.545)       0:03:08.662 **** 
ok: [node2]
ok: [node1]

TASK [create-kube-cluster-master : create system kube user] *************************************************************************************************
Wednesday 27 February 2019  22:47:07 +0800 (0:00:00.509)       0:03:09.172 **** 
ok: [node2]
ok: [node1]

TASK [create-kube-cluster-master : create kube home directory and data directory] ***************************************************************************
Wednesday 27 February 2019  22:47:07 +0800 (0:00:00.427)       0:03:09.600 **** 
changed: [node1] => (item=$HOME/.kube)
ok: [node2] => (item=$HOME/.kube)
changed: [node1] => (item=/var/lib/kube)
changed: [node2] => (item=/var/lib/kube)

TASK [create-kube-cluster-master : create and ensure kube config directory exists] **************************************************************************
Wednesday 27 February 2019  22:47:08 +0800 (0:00:00.788)       0:03:10.389 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : create kube cert, manifests, log directories] ****************************************************************************
Wednesday 27 February 2019  22:47:08 +0800 (0:00:00.420)       0:03:10.810 **** 
changed: [node2] => (item=/etc/kubernetes/rbac)
changed: [node1] => (item=/etc/kubernetes/rbac)
changed: [node2] => (item=/etc/kubernetes/abac)
changed: [node1] => (item=/etc/kubernetes/abac)
changed: [node2] => (item=/etc/kubernetes/cert)
changed: [node1] => (item=/etc/kubernetes/cert)
changed: [node2] => (item=/etc/kubernetes/yaml)
changed: [node2] => (item=/etc/kubernetes/daemonset)
changed: [node1] => (item=/etc/kubernetes/yaml)
changed: [node2] => (item=/etc/kubernetes/image)
changed: [node1] => (item=/etc/kubernetes/daemonset)
changed: [node2] => (item=/etc/kubernetes/manifests)
changed: [node1] => (item=/etc/kubernetes/image)
changed: [node1] => (item=/etc/kubernetes/manifests)
ok: [node2] => (item=/var/log/kubernetes)
changed: [node2] => (item=/etc/kubernetes/config)
changed: [node1] => (item=/var/log/kubernetes)
changed: [node2] => (item=/etc/kubernetes/addons)
changed: [node1] => (item=/etc/kubernetes/config)
changed: [node2] => (item=/etc/config/ip-masq-agent)
changed: [node1] => (item=/etc/kubernetes/addons)
changed: [node1] => (item=/etc/config/ip-masq-agent)

TASK [create-kube-cluster-master : create kube etcd_cert_path directory] ************************************************************************************
Wednesday 27 February 2019  22:47:11 +0800 (0:00:03.196)       0:03:14.006 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : fetch etcd-ca and etcd client cert files to temp exchange] ***************************************************************
Wednesday 27 February 2019  22:47:12 +0800 (0:00:00.465)       0:03:14.472 **** 
ok: [node1 -> node1] => (item=etcd-ca.pem)
ok: [node2 -> node1] => (item=etcd-ca.pem)
ok: [node1 -> node1] => (item=etcd-client.pem)
ok: [node2 -> node1] => (item=etcd-client.pem)
ok: [node1 -> node1] => (item=etcd-client-key.pem)
ok: [node2 -> node1] => (item=etcd-client-key.pem)

TASK [create-kube-cluster-master : copy etcd-ca and client cert for etcdctl client] *************************************************************************
Wednesday 27 February 2019  22:47:13 +0800 (0:00:01.030)       0:03:15.502 **** 
changed: [node2] => (item=etcd-ca.pem)
changed: [node1] => (item=etcd-ca.pem)
changed: [node2] => (item=etcd-client.pem)
changed: [node1] => (item=etcd-client.pem)
changed: [node2] => (item=etcd-client-key.pem)
changed: [node1] => (item=etcd-client-key.pem)

TASK [create-kube-cluster-master : exec copy etcd client binary to node] ************************************************************************************
Wednesday 27 February 2019  22:47:15 +0800 (0:00:02.297)       0:03:17.800 **** 
changed: [node2] => (item=etcdctl)
changed: [node1] => (item=etcdctl)

TASK [create-kube-cluster-master : copy etcdctl-env.rc for etcdctl environment] *****************************************************************************
Wednesday 27 February 2019  22:47:16 +0800 (0:00:01.054)       0:03:18.855 **** 
ok: [node1]
ok: [node2]

TASK [create-kube-cluster-master : copy write-etcdctl-env.sh to /usr/local/bin] *****************************************************************************
Wednesday 27 February 2019  22:47:17 +0800 (0:00:01.019)       0:03:19.875 **** 
ok: [node2]
ok: [node1]

TASK [create-kube-cluster-master : write etctctl env - append etcdctl-env.rc to /root/.bash_profile] ********************************************************
Wednesday 27 February 2019  22:47:18 +0800 (0:00:00.751)       0:03:20.627 **** 
changed: [node1]
changed: [node2]

TASK [create-kube-cluster-master : fetch root ca cert from cache dir to temp] *******************************************************************************
Wednesday 27 February 2019  22:47:19 +0800 (0:00:00.502)       0:03:21.130 **** 
ok: [node1 -> node1] => (item=ca.pem)
ok: [node2 -> node1] => (item=ca.pem)
ok: [node1 -> node1] => (item=ca-key.pem)
ok: [node2 -> node1] => (item=ca-key.pem)

TASK [create-kube-cluster-master : copy root ca cert files to kube master] **********************************************************************************
Wednesday 27 February 2019  22:47:19 +0800 (0:00:00.780)       0:03:21.910 **** 
changed: [node2] => (item=ca.pem)
changed: [node1] => (item=ca.pem)
changed: [node2] => (item=ca-key.pem)
changed: [node1] => (item=ca-key.pem)

TASK [create-kube-cluster-master : fetch kube admin cert key from cache dir to temp] ************************************************************************
Wednesday 27 February 2019  22:47:21 +0800 (0:00:01.537)       0:03:23.448 **** 
ok: [node1 -> node1] => (item=kube-admin.pem)
ok: [node2 -> node1] => (item=kube-admin.pem)
ok: [node1 -> node1] => (item=kube-admin-key.pem)
ok: [node2 -> node1] => (item=kube-admin-key.pem)

TASK [create-kube-cluster-master : copy kube admin cert key files to kube master] ***************************************************************************
Wednesday 27 February 2019  22:47:22 +0800 (0:00:00.909)       0:03:24.357 **** 
changed: [node2] => (item=kube-admin.pem)
changed: [node1] => (item=kube-admin.pem)
changed: [node2] => (item=kube-admin-key.pem)
changed: [node1] => (item=kube-admin-key.pem)

TASK [create-kube-cluster-master : fetch kube apiserver cert key from cache dir to temp] ********************************************************************
Wednesday 27 February 2019  22:47:23 +0800 (0:00:01.569)       0:03:25.926 **** 
ok: [node1 -> node1] => (item=token.csv)
ok: [node2 -> node1] => (item=token.csv)
ok: [node1 -> node1] => (item=tls-bootstrap-token.yaml)
ok: [node2 -> node1] => (item=tls-bootstrap-token.yaml)
ok: [node1 -> node1] => (item=kube-apiserver.pem)
ok: [node2 -> node1] => (item=kube-apiserver.pem)
ok: [node1 -> node1] => (item=kube-apiserver-key.pem)
ok: [node2 -> node1] => (item=kube-apiserver-key.pem)
ok: [node1 -> node1] => (item=kube-apiserver-client.pem)
ok: [node2 -> node1] => (item=kube-apiserver-client.pem)
ok: [node1 -> node1] => (item=kube-apiserver-client-key.pem)
ok: [node2 -> node1] => (item=kube-apiserver-client-key.pem)

TASK [create-kube-cluster-master : copy kube apiserver cert key files to kube master] ***********************************************************************
Wednesday 27 February 2019  22:47:25 +0800 (0:00:02.015)       0:03:27.942 **** 
changed: [node2] => (item=token.csv)
changed: [node1] => (item=token.csv)
changed: [node2] => (item=tls-bootstrap-token.yaml)
changed: [node1] => (item=tls-bootstrap-token.yaml)
changed: [node2] => (item=kube-apiserver.pem)
changed: [node1] => (item=kube-apiserver.pem)
changed: [node2] => (item=kube-apiserver-key.pem)
changed: [node2] => (item=kube-apiserver-client.pem)
changed: [node1] => (item=kube-apiserver-key.pem)
changed: [node2] => (item=kube-apiserver-client-key.pem)
changed: [node1] => (item=kube-apiserver-client.pem)
changed: [node1] => (item=kube-apiserver-client-key.pem)

TASK [create-kube-cluster-master : fetch kube controller-manager cert key to temp] **************************************************************************
Wednesday 27 February 2019  22:47:30 +0800 (0:00:04.501)       0:03:32.444 **** 
ok: [node1 -> node1] => (item=kube-controller-manager.pem)
ok: [node2 -> node1] => (item=kube-controller-manager.pem)
ok: [node1 -> node1] => (item=kube-controller-manager-key.pem)
ok: [node2 -> node1] => (item=kube-controller-manager-key.pem)

TASK [create-kube-cluster-master : copy kube controller-manager cert key files to kube master] **************************************************************
Wednesday 27 February 2019  22:47:31 +0800 (0:00:00.823)       0:03:33.268 **** 
changed: [node2] => (item=kube-controller-manager.pem)
changed: [node1] => (item=kube-controller-manager.pem)
changed: [node2] => (item=kube-controller-manager-key.pem)
changed: [node1] => (item=kube-controller-manager-key.pem)

TASK [create-kube-cluster-master : fetch kube scheduler cert key from cache dir to temp] ********************************************************************
Wednesday 27 February 2019  22:47:32 +0800 (0:00:01.674)       0:03:34.943 **** 
ok: [node1 -> node1] => (item=kube-scheduler.pem)
ok: [node2 -> node1] => (item=kube-scheduler.pem)
ok: [node1 -> node1] => (item=kube-scheduler-key.pem)
ok: [node2 -> node1] => (item=kube-scheduler-key.pem)
changed: [node1 -> node1] => (item=timestamp.log)
ok: [node2 -> node1] => (item=timestamp.log)

TASK [create-kube-cluster-master : copy kube scheduler cert key files to kube master] ***********************************************************************
Wednesday 27 February 2019  22:47:34 +0800 (0:00:01.101)       0:03:36.045 **** 
changed: [node2] => (item=kube-scheduler.pem)
changed: [node1] => (item=kube-scheduler.pem)
changed: [node2] => (item=kube-scheduler-key.pem)
changed: [node1] => (item=kube-scheduler-key.pem)
changed: [node2] => (item=timestamp.log)
changed: [node1] => (item=timestamp.log)

TASK [create-kube-cluster-master : fetch kube proxy cert key from cache dir to temp] ************************************************************************
Wednesday 27 February 2019  22:47:36 +0800 (0:00:02.418)       0:03:38.464 **** 
ok: [node1 -> node1] => (item=kube-proxy.pem)
ok: [node2 -> node1] => (item=kube-proxy.pem)
ok: [node1 -> node1] => (item=kube-proxy-key.pem)
ok: [node2 -> node1] => (item=kube-proxy-key.pem)
ok: [node1 -> node1] => (item=timestamp.log)
ok: [node2 -> node1] => (item=timestamp.log)

TASK [create-kube-cluster-master : copy kube proxy cert key files to kube master] ***************************************************************************
Wednesday 27 February 2019  22:47:37 +0800 (0:00:01.058)       0:03:39.522 **** 
changed: [node2] => (item=kube-proxy.pem)
changed: [node1] => (item=kube-proxy.pem)
changed: [node2] => (item=kube-proxy-key.pem)
changed: [node1] => (item=kube-proxy-key.pem)
ok: [node2] => (item=timestamp.log)
ok: [node1] => (item=timestamp.log)

TASK [create-kube-cluster-master : fetch kube sa cert key from cache dir to temp] ***************************************************************************
Wednesday 27 February 2019  22:47:39 +0800 (0:00:02.420)       0:03:41.943 **** 
ok: [node1 -> node1] => (item=kube-serviceaccount.pem)
ok: [node2 -> node1] => (item=kube-serviceaccount.pem)
ok: [node1 -> node1] => (item=kube-serviceaccount-key.pem)
ok: [node2 -> node1] => (item=kube-serviceaccount-key.pem)
ok: [node1 -> node1] => (item=timestamp.log)
ok: [node2 -> node1] => (item=timestamp.log)

TASK [create-kube-cluster-master : copy kube sa service account cert key files to kube master] **************************************************************
Wednesday 27 February 2019  22:47:41 +0800 (0:00:01.264)       0:03:43.207 **** 
changed: [node2] => (item=kube-serviceaccount.pem)
changed: [node1] => (item=kube-serviceaccount.pem)
changed: [node2] => (item=kube-serviceaccount-key.pem)
changed: [node1] => (item=kube-serviceaccount-key.pem)
ok: [node2] => (item=timestamp.log)
ok: [node1] => (item=timestamp.log)

TASK [create-kube-cluster-master : generate kube encryption config file - include encryption key] ***********************************************************
Wednesday 27 February 2019  22:47:43 +0800 (0:00:02.399)       0:03:45.607 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : change file attrib] ******************************************************************************************************
Wednesday 27 February 2019  22:47:44 +0800 (0:00:00.953)       0:03:46.560 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : backup encryptionconfig file to ansible machine] *************************************************************************
Wednesday 27 February 2019  22:47:45 +0800 (0:00:00.619)       0:03:47.179 **** 
ok: [node1 -> node1]

TASK [create-kube-cluster-master : exec create-kube-binary-files] *******************************************************************************************
Wednesday 27 February 2019  22:47:45 +0800 (0:00:00.353)       0:03:47.533 **** 
ok: [node2] => (item=kubectl)
ok: [node1] => (item=kubectl)
ok: [node2] => (item=kube-apiserver)
ok: [node1] => (item=kube-apiserver)
ok: [node2] => (item=kube-controller-manager)
ok: [node2] => (item=kube-scheduler)
ok: [node1] => (item=kube-controller-manager)
ok: [node2] => (item=kubelet)
ok: [node1] => (item=kube-scheduler)
ok: [node2] => (item=kube-proxy)
ok: [node2] => (item=kubeadm)
ok: [node1] => (item=kubelet)
ok: [node2] => (item=apiextensions-apiserver)
ok: [node1] => (item=kube-proxy)
ok: [node2] => (item=cloud-controller-manager)
ok: [node1] => (item=kubeadm)
ok: [node1] => (item=apiextensions-apiserver)
ok: [node2] => (item=hyperkube)
ok: [node2] => (item=mounter)
ok: [node1] => (item=cloud-controller-manager)
ok: [node1] => (item=hyperkube)
ok: [node1] => (item=mounter)

TASK [create-kube-cluster-master : debug] *******************************************************************************************************************
Wednesday 27 February 2019  22:48:00 +0800 (0:00:15.192)       0:04:02.725 **** 
ok: [node1] => {
    "msg": "kubernetes binary version 1.13.2 is installed on node1."
}
ok: [node2] => {
    "msg": "kubernetes binary version 1.13.2 is installed on node2."
}

TASK [create-kube-cluster-master : generate kub config - set cluster] ***************************************************************************************
Wednesday 27 February 2019  22:48:00 +0800 (0:00:00.271)       0:04:02.996 **** 
changed: [node1]
changed: [node2]

TASK [create-kube-cluster-master : generate kube config - set credential] ***********************************************************************************
Wednesday 27 February 2019  22:48:01 +0800 (0:00:00.674)       0:04:03.671 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : generate kube config - set context] **************************************************************************************
Wednesday 27 February 2019  22:48:02 +0800 (0:00:00.684)       0:04:04.355 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : generate kube config - set default context] ******************************************************************************
Wednesday 27 February 2019  22:48:02 +0800 (0:00:00.647)       0:04:05.003 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : change file attrib] ******************************************************************************************************
Wednesday 27 February 2019  22:48:03 +0800 (0:00:00.686)       0:04:05.690 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : cp kube config to home] **************************************************************************************************
Wednesday 27 February 2019  22:48:04 +0800 (0:00:00.474)       0:04:06.164 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : fetch kube controller-manager config file to ansible backup directory] ***************************************************
Wednesday 27 February 2019  22:48:04 +0800 (0:00:00.571)       0:04:06.735 **** 
changed: [node1 -> node1]

TASK [create-kube-cluster-master : generate kube audit poicy config file] ***********************************************************************************
Wednesday 27 February 2019  22:48:05 +0800 (0:00:00.422)       0:04:07.158 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : change file attrib] ******************************************************************************************************
Wednesday 27 February 2019  22:48:06 +0800 (0:00:00.962)       0:04:08.121 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : backup audit policy config file to ansible machine] **********************************************************************
Wednesday 27 February 2019  22:48:06 +0800 (0:00:00.463)       0:04:08.585 **** 
ok: [node1 -> node1]

TASK [create-kube-cluster-master : create abac config directory] ********************************************************************************************
Wednesday 27 February 2019  22:48:07 +0800 (0:00:00.454)       0:04:09.039 **** 
changed: [node2]
changed: [node1]

TASK [create-kube-cluster-master : create rbac config files] ************************************************************************************************
Wednesday 27 February 2019  22:48:07 +0800 (0:00:00.532)       0:04:09.571 **** 
changed: [node2] => (item=abac-auth.json)
changed: [node1] => (item=abac-auth.json)

TASK [create-kube-cluster-master : exec create-kube-apiserver-systemd-file] *********************************************************************************
Wednesday 27 February 2019  22:48:08 +0800 (0:00:01.123)       0:04:10.695 **** 
ok: [node2]
ok: [node1]

TASK [create-kube-cluster-master : enable and start kube-apiserver service] *********************************************************************************
Wednesday 27 February 2019  22:48:09 +0800 (0:00:01.240)       0:04:11.935 **** 
fatal: [node1 -> node1]: FAILED! => {"changed": false, "msg": "Unable to start service kube-apiserver: Job for kube-apiserver.service failed because the control process exited with error code. See \"systemctl status kube-apiserver.service\" and \"journalctl -xe\" for details.\n"}

NO MORE HOSTS LEFT ******************************************************************************************************************************************
	to retry, use: --limit @/root/prj/kube-dep/deploy-cluster.retry

PLAY RECAP **************************************************************************************************************************************************
node1                      : ok=209  changed=87   unreachable=0    failed=1   
node11                     : ok=34   changed=12   unreachable=0    failed=0   
node12                     : ok=20   changed=11   unreachable=0    failed=0   
node13                     : ok=20   changed=11   unreachable=0    failed=0   
node2                      : ok=50   changed=28   unreachable=0    failed=0   

Wednesday 27 February 2019  22:48:11 +0800 (0:00:01.249)       0:04:13.185 **** 
=============================================================================== 
create-kube-cluster-master : exec create-kube-binary-files ------------------------------------------------------------------------------------------ 15.19s
gen-kube-ca-cert : copy kube-apiserver cert from kube cache to kube-apiserver cache directory ------------------------------------------------------- 10.80s
gen-kube-ca-cert : fetch all cert files to ansible temp dir ------------------------------------------------------------------------------------------ 7.78s
gen-etcd-ca-cert : copy flanneld ca cert and config to flanneld cache directory ---------------------------------------------------------------------- 7.71s
gen-kube-ca-cert : fetch all cert files of kube cache dir to ansible kube backup dir ----------------------------------------------------------------- 7.48s
create-etcd-cluster : copy all cert files to etcd cluster node --------------------------------------------------------------------------------------- 7.29s
install-cfssl : install cfssl utility ---------------------------------------------------------------------------------------------------------------- 6.44s
gen-kube-ca-cert : copy kube-scheduler cert from kube cache to kube-scheduler cache directory -------------------------------------------------------- 6.39s
gen-kube-ca-cert : copy kube-serviceaccount cert from kube cache to kube-serviceaccount cache directory ---------------------------------------------- 6.38s
gen-kube-ca-cert : copy kube-admin cert from kube cache to kube-admin cache directory ---------------------------------------------------------------- 6.31s
gen-kube-ca-cert : copy kube-proxy cert from kube cache to kube-proxy cache directory ---------------------------------------------------------------- 6.27s
gen-kube-ca-cert : copy kube-controller-manager cert from kube cache to kube-controller-manager cache directory -------------------------------------- 6.20s
gen-etcd-ca-cert : fetch all cert files of etcd cache dir to ansible kube backup dir ----------------------------------------------------------------- 5.29s
create-kube-cluster-master : copy kube apiserver cert key files to kube master ----------------------------------------------------------------------- 4.50s
create-etcd-cluster : fetch all cert files of etcd cache dir to ansible kube backup dir -------------------------------------------------------------- 4.03s
create-etcd-cluster : enable and start etcd service -------------------------------------------------------------------------------------------------- 3.82s
gen-kube-ca-cert : gen kube ca certs kubernetes services --------------------------------------------------------------------------------------------- 3.63s
gen-kube-ca-cert : fetch kube-apiserver cert from remote cache --------------------------------------------------------------------------------------- 3.28s
create-kube-cluster-master : create kube cert, manifests, log directories ---------------------------------------------------------------------------- 3.20s
gen-etcd-ca-cert : copy cluster master ca cert as etcd root ca cert ---------------------------------------------------------------------------------- 2.52s
Playbook run took 0 days, 0 hours, 4 minutes, 13 seconds
